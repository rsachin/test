spring.application.name=PropertyListing

# ========================================================
# SPRING PROFILES
# ========================================================
# Active profile (can be overridden with SPRING_PROFILES_ACTIVE environment variable)
# Default is 'dev' for local development
spring.profiles.active=dev

# ========================================================
# COMMON PROPERTIES (applied to all profiles)
# ========================================================

# Application Info
app.name=Property Listing Service
app.description=Microservice for managing property listings

# ========================================================
# PROFILE-SPECIFIC PROPERTIES
# These files will be loaded based on the active profile:
# - application-dev.properties
# - application-test.properties
# - application-prod.properties
# ========================================================

# ========================================================
# LOGGING (common settings, can be overridden in profile-specific files)
# ========================================================
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.level.root=INFO

# ========================================================
# SPRING DOC OPENAPI (Swagger) - Common settings
# ========================================================
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# ========================================================
# SERVER CONFIGURATION (can be overridden in profiles)
# ========================================================
server.port=8080
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always

# ========================================================
# SPRING MVC (can be overridden in profiles)
# ========================================================
spring.mvc.problem.include-message=always
spring.mvc.problem.include-binding-errors=always

# ========================================================
# VALIDATION (can be overridden in profiles)
# ========================================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# ========================================================
# JACKSON (JSON) CONFIGURATION
# ========================================================
# spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
# spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
# spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=false
# spring.jackson.deserialization.FAIL_ON_IGNORED_PROPERTIES=false
# spring.jackson.parser.FAIL_ON_NUMBERS_FOR_ENUMS=true
# spring.jackson.parser.FAIL_ON_NULL_FOR_PRIMITIVES=false

# ========================================================
# ACTUATOR (can be overridden in profiles)
# ========================================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.db.enabled=true
management.server.port=8081
management.endpoints.web.base-path=/actuator
management.endpoint.health.show-details=always

# ========================================================
# HIBERNATE (can be overridden in profiles)
# ========================================================
# Validate the schema, makes no changes to the database
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.generate_statistics=false

# ========================================================
# DATASOURCE (can be overridden in profiles)
# ========================================================
# These are just placeholders, should be overridden in profile-specific files
spring.datasource.url=${DB_URL:jdbc:h2:mem:propertydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=org.h2.Driver

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000

# Application Properties
app.default-page-size=20
app.max-page-size=100

# ========================================================
# JWT CONFIGURATION
# ========================================================
# Generate a strong secret key using: openssl rand -base64 32
jwt.secret-key=my-long-switchx-secret-key-which-is-extermely-32-characters-long
jwt.expiration-time=86400000
jwt.refresh-expiration-time=604800000

# ========================================================
# LOGGING
# ========================================================
# Request/Response logging
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ========================================================
# ACTUATOR
# ========================================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# ========================================================
# VALIDATION
# ========================================================
# Hibernate Validation
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Validation messages
spring.messages.basename=messages/validation
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

# ========================================================
# RATE LIMITING
# ========================================================
app.rate-limit.enabled=true
app.rate-limit.capacity=100
app.rate-limit.time-window=3600

# ========================================================
# CORS
# ========================================================
# app.cors.allowed-origins=http://localhost:3000
# app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
# app.cors.allowed-headers=*
# app.cors.exposed-headers=Authorization

# ========================================================
# SSL/TLS (uncomment and configure for production)
# server.ssl.enabled=true
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=your-keystore-password
# server.ssl.key-alias=tomcat
# server.ssl.key-password=your-key-password

# HTTP to HTTPS redirect (uncomment for production)
# server.tomcat.remote-ip-header=x-forwarded-for
# server.tomcat.protocol-header=x-forwarded-proto
# server.use-forward-headers=true
